
Lab2_Serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000158  00800100  00000c66  00000cfa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c66  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000478  00800258  00800258  00000e52  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  00000e88  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001dd6  00000000  00000000  00001088  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071d  00000000  00000000  00002e5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000907  00000000  00000000  0000357b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000043c  00000000  00000000  00003e84  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007ee  00000000  00000000  000042c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014e7  00000000  00000000  00004aae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b0  00000000  00000000  00005f95  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 13 01 	jmp	0x226	; 0x226 <OSTickISR>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <SerTxISR>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e6       	ldi	r30, 0x66	; 102
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 35       	cpi	r26, 0x58	; 88
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	26 e0       	ldi	r18, 0x06	; 6
  8c:	a8 e5       	ldi	r26, 0x58	; 88
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 3d       	cpi	r26, 0xD0	; 208
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b1 01 	call	0x362	; 0x362 <main>
  9e:	0c 94 31 06 	jmp	0xc62	; 0xc62 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <OSStartHighRdy>:
  a6:	00 91 96 05 	lds	r16, 0x0596
  aa:	03 95       	inc	r16
  ac:	00 93 96 05 	sts	0x0596, r16
  b0:	e0 91 ab 05 	lds	r30, 0x05AB
  b4:	f0 91 ac 05 	lds	r31, 0x05AC
  b8:	c1 91       	ld	r28, Z+
  ba:	cd bf       	out	0x3d, r28	; 61
  bc:	d1 91       	ld	r29, Z+
  be:	de bf       	out	0x3e, r29	; 62
  c0:	0f 91       	pop	r16
  c2:	0f bf       	out	0x3f, r16	; 63
  c4:	ff 91       	pop	r31
  c6:	ef 91       	pop	r30
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	bf 91       	pop	r27
  ce:	af 91       	pop	r26
  d0:	9f 91       	pop	r25
  d2:	8f 91       	pop	r24
  d4:	7f 91       	pop	r23
  d6:	6f 91       	pop	r22
  d8:	5f 91       	pop	r21
  da:	4f 91       	pop	r20
  dc:	3f 91       	pop	r19
  de:	2f 91       	pop	r18
  e0:	1f 91       	pop	r17
  e2:	0f 91       	pop	r16
  e4:	ff 90       	pop	r15
  e6:	ef 90       	pop	r14
  e8:	df 90       	pop	r13
  ea:	cf 90       	pop	r12
  ec:	bf 90       	pop	r11
  ee:	af 90       	pop	r10
  f0:	9f 90       	pop	r9
  f2:	8f 90       	pop	r8
  f4:	7f 90       	pop	r7
  f6:	6f 90       	pop	r6
  f8:	5f 90       	pop	r5
  fa:	4f 90       	pop	r4
  fc:	3f 90       	pop	r3
  fe:	2f 90       	pop	r2
 100:	1f 90       	pop	r1
 102:	0f 90       	pop	r0
 104:	08 95       	ret

00000106 <OSCtxSw>:
 106:	0f 92       	push	r0
 108:	1f 92       	push	r1
 10a:	2f 92       	push	r2
 10c:	3f 92       	push	r3
 10e:	4f 92       	push	r4
 110:	5f 92       	push	r5
 112:	6f 92       	push	r6
 114:	7f 92       	push	r7
 116:	8f 92       	push	r8
 118:	9f 92       	push	r9
 11a:	af 92       	push	r10
 11c:	bf 92       	push	r11
 11e:	cf 92       	push	r12
 120:	df 92       	push	r13
 122:	ef 92       	push	r14
 124:	ff 92       	push	r15
 126:	0f 93       	push	r16
 128:	1f 93       	push	r17
 12a:	2f 93       	push	r18
 12c:	3f 93       	push	r19
 12e:	4f 93       	push	r20
 130:	5f 93       	push	r21
 132:	6f 93       	push	r22
 134:	7f 93       	push	r23
 136:	8f 93       	push	r24
 138:	9f 93       	push	r25
 13a:	af 93       	push	r26
 13c:	bf 93       	push	r27
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
 146:	0f b7       	in	r16, 0x3f	; 63
 148:	0f 93       	push	r16
 14a:	e0 91 b9 05 	lds	r30, 0x05B9
 14e:	f0 91 ba 05 	lds	r31, 0x05BA
 152:	cd b7       	in	r28, 0x3d	; 61
 154:	c1 93       	st	Z+, r28
 156:	de b7       	in	r29, 0x3e	; 62
 158:	d1 93       	st	Z+, r29
 15a:	00 91 9b 05 	lds	r16, 0x059B
 15e:	00 93 9c 05 	sts	0x059C, r16
 162:	e0 91 ab 05 	lds	r30, 0x05AB
 166:	f0 91 ac 05 	lds	r31, 0x05AC
 16a:	e0 93 b9 05 	sts	0x05B9, r30
 16e:	f0 93 ba 05 	sts	0x05BA, r31
 172:	c1 91       	ld	r28, Z+
 174:	cd bf       	out	0x3d, r28	; 61
 176:	d1 91       	ld	r29, Z+
 178:	de bf       	out	0x3e, r29	; 62
 17a:	0f 91       	pop	r16
 17c:	0f bf       	out	0x3f, r16	; 63
 17e:	ff 91       	pop	r31
 180:	ef 91       	pop	r30
 182:	df 91       	pop	r29
 184:	cf 91       	pop	r28
 186:	bf 91       	pop	r27
 188:	af 91       	pop	r26
 18a:	9f 91       	pop	r25
 18c:	8f 91       	pop	r24
 18e:	7f 91       	pop	r23
 190:	6f 91       	pop	r22
 192:	5f 91       	pop	r21
 194:	4f 91       	pop	r20
 196:	3f 91       	pop	r19
 198:	2f 91       	pop	r18
 19a:	1f 91       	pop	r17
 19c:	0f 91       	pop	r16
 19e:	ff 90       	pop	r15
 1a0:	ef 90       	pop	r14
 1a2:	df 90       	pop	r13
 1a4:	cf 90       	pop	r12
 1a6:	bf 90       	pop	r11
 1a8:	af 90       	pop	r10
 1aa:	9f 90       	pop	r9
 1ac:	8f 90       	pop	r8
 1ae:	7f 90       	pop	r7
 1b0:	6f 90       	pop	r6
 1b2:	5f 90       	pop	r5
 1b4:	4f 90       	pop	r4
 1b6:	3f 90       	pop	r3
 1b8:	2f 90       	pop	r2
 1ba:	1f 90       	pop	r1
 1bc:	0f 90       	pop	r0
 1be:	08 95       	ret

000001c0 <OSIntCtxSw>:
 1c0:	00 91 9b 05 	lds	r16, 0x059B
 1c4:	00 93 9c 05 	sts	0x059C, r16
 1c8:	e0 91 ab 05 	lds	r30, 0x05AB
 1cc:	f0 91 ac 05 	lds	r31, 0x05AC
 1d0:	e0 93 b9 05 	sts	0x05B9, r30
 1d4:	f0 93 ba 05 	sts	0x05BA, r31
 1d8:	c1 91       	ld	r28, Z+
 1da:	cd bf       	out	0x3d, r28	; 61
 1dc:	d1 91       	ld	r29, Z+
 1de:	de bf       	out	0x3e, r29	; 62
 1e0:	0f 91       	pop	r16
 1e2:	0f bf       	out	0x3f, r16	; 63
 1e4:	ff 91       	pop	r31
 1e6:	ef 91       	pop	r30
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	bf 91       	pop	r27
 1ee:	af 91       	pop	r26
 1f0:	9f 91       	pop	r25
 1f2:	8f 91       	pop	r24
 1f4:	7f 91       	pop	r23
 1f6:	6f 91       	pop	r22
 1f8:	5f 91       	pop	r21
 1fa:	4f 91       	pop	r20
 1fc:	3f 91       	pop	r19
 1fe:	2f 91       	pop	r18
 200:	1f 91       	pop	r17
 202:	0f 91       	pop	r16
 204:	ff 90       	pop	r15
 206:	ef 90       	pop	r14
 208:	df 90       	pop	r13
 20a:	cf 90       	pop	r12
 20c:	bf 90       	pop	r11
 20e:	af 90       	pop	r10
 210:	9f 90       	pop	r9
 212:	8f 90       	pop	r8
 214:	7f 90       	pop	r7
 216:	6f 90       	pop	r6
 218:	5f 90       	pop	r5
 21a:	4f 90       	pop	r4
 21c:	3f 90       	pop	r3
 21e:	2f 90       	pop	r2
 220:	1f 90       	pop	r1
 222:	0f 90       	pop	r0
 224:	08 95       	ret

00000226 <OSTickISR>:
 226:	0f 92       	push	r0
 228:	1f 92       	push	r1
 22a:	2f 92       	push	r2
 22c:	3f 92       	push	r3
 22e:	4f 92       	push	r4
 230:	5f 92       	push	r5
 232:	6f 92       	push	r6
 234:	7f 92       	push	r7
 236:	8f 92       	push	r8
 238:	9f 92       	push	r9
 23a:	af 92       	push	r10
 23c:	bf 92       	push	r11
 23e:	cf 92       	push	r12
 240:	df 92       	push	r13
 242:	ef 92       	push	r14
 244:	ff 92       	push	r15
 246:	0f 93       	push	r16
 248:	1f 93       	push	r17
 24a:	2f 93       	push	r18
 24c:	3f 93       	push	r19
 24e:	4f 93       	push	r20
 250:	5f 93       	push	r21
 252:	6f 93       	push	r22
 254:	7f 93       	push	r23
 256:	8f 93       	push	r24
 258:	9f 93       	push	r25
 25a:	af 93       	push	r26
 25c:	bf 93       	push	r27
 25e:	cf 93       	push	r28
 260:	df 93       	push	r29
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
 266:	0f b7       	in	r16, 0x3f	; 63
 268:	00 68       	ori	r16, 0x80	; 128
 26a:	0f 93       	push	r16
 26c:	00 91 b8 05 	lds	r16, 0x05B8
 270:	03 95       	inc	r16
 272:	00 93 b8 05 	sts	0x05B8, r16
 276:	01 30       	cpi	r16, 0x01	; 1
 278:	41 f4       	brne	.+16     	; 0x28a <_not_first_int>
 27a:	cd b7       	in	r28, 0x3d	; 61
 27c:	de b7       	in	r29, 0x3e	; 62
 27e:	e0 91 b9 05 	lds	r30, 0x05B9
 282:	f0 91 ba 05 	lds	r31, 0x05BA
 286:	c1 93       	st	Z+, r28
 288:	d1 93       	st	Z+, r29

0000028a <_not_first_int>:
 28a:	0d ee       	ldi	r16, 0xED	; 237
 28c:	06 bd       	out	0x26, r16	; 38
 28e:	78 94       	sei
 290:	0e 94 cc 03 	call	0x798	; 0x798 <OSTimeTick>
 294:	00 00       	nop
 296:	0e 94 b6 02 	call	0x56c	; 0x56c <OSIntExit>
 29a:	0f 91       	pop	r16
 29c:	0f bf       	out	0x3f, r16	; 63
 29e:	ff 91       	pop	r31
 2a0:	ef 91       	pop	r30
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	bf 91       	pop	r27
 2a8:	af 91       	pop	r26
 2aa:	9f 91       	pop	r25
 2ac:	8f 91       	pop	r24
 2ae:	7f 91       	pop	r23
 2b0:	6f 91       	pop	r22
 2b2:	5f 91       	pop	r21
 2b4:	4f 91       	pop	r20
 2b6:	3f 91       	pop	r19
 2b8:	2f 91       	pop	r18
 2ba:	1f 91       	pop	r17
 2bc:	0f 91       	pop	r16
 2be:	ff 90       	pop	r15
 2c0:	ef 90       	pop	r14
 2c2:	df 90       	pop	r13
 2c4:	cf 90       	pop	r12
 2c6:	bf 90       	pop	r11
 2c8:	af 90       	pop	r10
 2ca:	9f 90       	pop	r9
 2cc:	8f 90       	pop	r8
 2ce:	7f 90       	pop	r7
 2d0:	6f 90       	pop	r6
 2d2:	5f 90       	pop	r5
 2d4:	4f 90       	pop	r4
 2d6:	3f 90       	pop	r3
 2d8:	2f 90       	pop	r2
 2da:	1f 90       	pop	r1
 2dc:	0f 90       	pop	r0
 2de:	08 95       	ret

000002e0 <WatchDogReset>:
 2e0:	a8 95       	wdr
 2e2:	08 95       	ret

000002e4 <SerTxISR>:
 2e4:	08 95       	ret

000002e6 <Button>:
	//if pin8 is high
	//turn on LED
	
	for (;;)
	{
		DDRB = 0b11111100;
 2e6:	8c ef       	ldi	r24, 0xFC	; 252
 2e8:	84 b9       	out	0x04, r24	; 4
		
		if (PINB & _BV(PORTB2))
 2ea:	1a 9b       	sbis	0x03, 2	; 3
 2ec:	fd cf       	rjmp	.-6      	; 0x2e8 <Button+0x2>
		{
			PORTB &= ~_BV(PORTB1); // turn on debug pin
 2ee:	29 98       	cbi	0x05, 1	; 5
 2f0:	fb cf       	rjmp	.-10     	; 0x2e8 <Button+0x2>

000002f2 <TaskStart>:
	char *threeDollarSign = "$$$";
	char *baudString = "U,38400,N";
	char *sys_on_str = "\r\nuCOS ON\r\n---\r\n";			//helps see when the system turns on
	pdata = pdata;                                         /* Prevent compiler warning                 */
	
	OSStatInit();                                          /* Initialize uC/OS-II's statistics         */
 2f2:	0e 94 79 05 	call	0xaf2	; 0xaf2 <OSStatInit>

	//OSTaskCreate(LedTask, (void *) 0, &TaskLedStk[TASK_STK_SIZE - 1], 10);
	
	//OSTaskCreate(SerialTransmitTask, (void *) 0, &SerialTransmitTaskStk[TRANSMIT_TASK_STK_SIZE-1], 20);
	
	OSTaskCreate(Button, (void *) 0, &ButtonStk[TASK_STK_SIZE - 1], 5);
 2f6:	25 e0       	ldi	r18, 0x05	; 5
 2f8:	44 ed       	ldi	r20, 0xD4	; 212
 2fa:	54 e0       	ldi	r21, 0x04	; 4
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	83 e7       	ldi	r24, 0x73	; 115
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	0e 94 6e 04 	call	0x8dc	; 0x8dc <OSTaskCreate>
	
	OSMboxPost(SerialTxMBox, (void *)threeDollarSign); //enter command mode
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	71 e0       	ldi	r23, 0x01	; 1
 30c:	80 91 91 03 	lds	r24, 0x0391
 310:	90 91 92 03 	lds	r25, 0x0392
 314:	0e 94 2f 04 	call	0x85e	; 0x85e <OSMboxPost>
	OSTimeDly(2*OS_TICKS_PER_SEC);
 318:	80 e9       	ldi	r24, 0x90	; 144
 31a:	91 e0       	ldi	r25, 0x01	; 1
 31c:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
	OSMboxPost(SerialTxMBox, (void *)baudString); //set baud to 38400
 320:	64 e0       	ldi	r22, 0x04	; 4
 322:	71 e0       	ldi	r23, 0x01	; 1
 324:	80 91 91 03 	lds	r24, 0x0391
 328:	90 91 92 03 	lds	r25, 0x0392
 32c:	0e 94 2f 04 	call	0x85e	; 0x85e <OSMboxPost>
	OSTimeDly(2*OS_TICKS_PER_SEC);
 330:	80 e9       	ldi	r24, 0x90	; 144
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
	OSMboxPost(SerialTxMBox, (void *)sys_on_str);	//tell the user debugging that we're on!
 338:	6e e0       	ldi	r22, 0x0E	; 14
 33a:	71 e0       	ldi	r23, 0x01	; 1
 33c:	80 91 91 03 	lds	r24, 0x0391
 340:	90 91 92 03 	lds	r25, 0x0392
 344:	0e 94 2f 04 	call	0x85e	; 0x85e <OSMboxPost>

    for (;;) {	
        OSCtxSwCtr = 0;                         /* Clear context switch counter             */
 348:	10 92 9f 05 	sts	0x059F, r1
 34c:	10 92 a0 05 	sts	0x05A0, r1
 350:	10 92 a1 05 	sts	0x05A1, r1
 354:	10 92 a2 05 	sts	0x05A2, r1
        OSTimeDly(OS_TICKS_PER_SEC);			/* Wait one second                          */
 358:	88 ec       	ldi	r24, 0xC8	; 200
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
 360:	f3 cf       	rjmp	.-26     	; 0x348 <TaskStart+0x56>

00000362 <main>:
 *                                                MAIN
 *********************************************************************************************************
 */
int main (void)
{
	InitPeripherals();
 362:	0e 94 db 01 	call	0x3b6	; 0x3b6 <InitPeripherals>
	
    OSInit();                                              /* Initialize uC/OS-II                      */
 366:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <OSInit>
	
	USART_Init();
 36a:	0e 94 fe 01 	call	0x3fc	; 0x3fc <USART_Init>

/* Create OS_EVENT resources here  */

	LedMBox = OSMboxCreate((void *)0);
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	0e 94 12 04 	call	0x824	; 0x824 <OSMboxCreate>
 376:	90 93 8e 03 	sts	0x038E, r25
 37a:	80 93 8d 03 	sts	0x038D, r24
	SerialTxMBox = OSMboxCreate((void *)0);
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 12 04 	call	0x824	; 0x824 <OSMboxCreate>
 386:	90 93 92 03 	sts	0x0392, r25
 38a:	80 93 91 03 	sts	0x0391, r24
	SerialTxSem = OSSemCreate(1);
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 51 04 	call	0x8a2	; 0x8a2 <OSSemCreate>
 396:	90 93 14 04 	sts	0x0414, r25
 39a:	80 93 13 04 	sts	0x0413, r24
	
/* END Create OS_EVENT resources   */

    OSTaskCreate(TaskStart, (void *)0, &TaskStartStk[TASK_STK_SIZE - 1], 0);
 39e:	20 e0       	ldi	r18, 0x00	; 0
 3a0:	44 e9       	ldi	r20, 0x94	; 148
 3a2:	55 e0       	ldi	r21, 0x05	; 5
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	89 e7       	ldi	r24, 0x79	; 121
 3aa:	91 e0       	ldi	r25, 0x01	; 1
 3ac:	0e 94 6e 04 	call	0x8dc	; 0x8dc <OSTaskCreate>
	
    OSStart();                                             /* Start multitasking                       */
 3b0:	0e 94 41 03 	call	0x682	; 0x682 <OSStart>
 3b4:	ff cf       	rjmp	.-2      	; 0x3b4 <main+0x52>

000003b6 <InitPeripherals>:

void InitPeripherals(void)
{

	// manage WDT
	cli();	
 3b6:	f8 94       	cli
	WatchDogReset();
 3b8:	0e 94 70 01 	call	0x2e0	; 0x2e0 <WatchDogReset>
	MCUSR &= ~(1<<WDRF);			// clear WDRF in MCUSR
 3bc:	84 b7       	in	r24, 0x34	; 52
 3be:	87 7f       	andi	r24, 0xF7	; 247
 3c0:	84 bf       	out	0x34, r24	; 52
	WDTCSR |= (1<<WDCE)|(1<<WDE)|0x08;	// write a logic one to WDCE and WDE and keep old prescalar setting to prevent unintentional timeout
 3c2:	e0 e6       	ldi	r30, 0x60	; 96
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 81       	ld	r24, Z
 3c8:	88 61       	ori	r24, 0x18	; 24
 3ca:	80 83       	st	Z, r24
	WDTCSR=0x00;					// turn wdt off
 3cc:	10 82       	st	Z, r1

	
	// PortB: set 
	//
	PORTB &= ~_BV(PORTB5); // set pin 5 (Arduino DIO pin 13) low to turn led off
 3ce:	2d 98       	cbi	0x05, 5	; 5
	PORTB &= ~_BV(PORTB4); // set pin 4 low to turn led off
 3d0:	2c 98       	cbi	0x05, 4	; 5
	DDRB |= _BV(DDB5); // set pin 5 of PORTB for output
 3d2:	25 9a       	sbi	0x04, 5	; 4
	DDRB |= _BV(DDB4); // set pin 4 of PORTB for output
 3d4:	24 9a       	sbi	0x04, 4	; 4
	
	DDRB &= ~_BV(DDB2); // set pin 2 of PORTB for io
 3d6:	22 98       	cbi	0x04, 2	; 4

	// setup Timer0 for UC/OS-II timer tick
	//
	TCCR0A = _BV(WGM01) | _BV(WGM00);				/* set timer0: OC0A/OC0B disconnected; fast PCM mode           */
 3d8:	83 e0       	ldi	r24, 0x03	; 3
 3da:	84 bd       	out	0x24, r24	; 36
	TCCR0B = _BV(WGM02) | _BV(CS02)| _BV(CS00);		/* timer0 clock = system clock/1024      */
 3dc:	8d e0       	ldi	r24, 0x0D	; 13
 3de:	85 bd       	out	0x25, r24	; 37
	OCR0A = (CPU_CLOCK_HZ/OS_TICKS_PER_SEC/1024)-1; /* This combination yields an interrupt every 5 msec  */
 3e0:	82 e1       	ldi	r24, 0x12	; 18
 3e2:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= _BV(TOIE0);							/* enable timer0 CTC-A interrupt */
 3e4:	ee e6       	ldi	r30, 0x6E	; 110
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	81 60       	ori	r24, 0x01	; 1
 3ec:	80 83       	st	Z, r24
	PRR &= ~_BV(PRTIM0);							/* turn on the module in the power management section */
 3ee:	e4 e6       	ldi	r30, 0x64	; 100
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	8f 7d       	andi	r24, 0xDF	; 223
 3f6:	80 83       	st	Z, r24
/* END setup USART   */	
	

	// Enable Global Interrupts
	//
	sei();							/* enable interrupts                */
 3f8:	78 94       	sei
 3fa:	08 95       	ret

000003fc <USART_Init>:
}

void USART_Init();

void USART_Init(){
	UBRR0H = (unsigned char)(UBRR>>8);
 3fc:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (unsigned char)UBRR;
 400:	89 e1       	ldi	r24, 0x19	; 25
 402:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 406:	88 e1       	ldi	r24, 0x18	; 24
 408:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 40c:	8e e0       	ldi	r24, 0x0E	; 14
 40e:	80 93 c2 00 	sts	0x00C2, r24
 412:	08 95       	ret

00000414 <OSTaskStkInit>:
    stk     = (INT8U *)ptos;		    /* AVR return stack ("hardware stack")          		*/
    tmp     = (INT16U)task;

    /* "push" initial register values onto the stack */

    *stk-- = (INT8U)tmp;                   /* Put task start address on top of stack          	        */
 414:	fa 01       	movw	r30, r20
 416:	80 83       	st	Z, r24
    *stk-- = (INT8U)(tmp >> 8);
 418:	31 97       	sbiw	r30, 0x01	; 1
 41a:	90 83       	st	Z, r25

    *stk-- = (INT8U)0x00;                   /* R0  = 0x00                                               */
 41c:	31 97       	sbiw	r30, 0x01	; 1
 41e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R1  = 0x00                                               */
 420:	31 97       	sbiw	r30, 0x01	; 1
 422:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R2  = 0x00                                               */
 424:	31 97       	sbiw	r30, 0x01	; 1
 426:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R3  = 0x00                                               */
 428:	31 97       	sbiw	r30, 0x01	; 1
 42a:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R4  = 0x00                                               */
 42c:	31 97       	sbiw	r30, 0x01	; 1
 42e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R5  = 0x00                                               */
 430:	31 97       	sbiw	r30, 0x01	; 1
 432:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R6  = 0x00                                               */
 434:	31 97       	sbiw	r30, 0x01	; 1
 436:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R7  = 0x00                                               */
 438:	31 97       	sbiw	r30, 0x01	; 1
 43a:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R8  = 0x00                                               */
 43c:	31 97       	sbiw	r30, 0x01	; 1
 43e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R9  = 0x00                                               */
 440:	31 97       	sbiw	r30, 0x01	; 1
 442:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R10 = 0x00                                               */
 444:	31 97       	sbiw	r30, 0x01	; 1
 446:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R11 = 0x00                                               */
 448:	31 97       	sbiw	r30, 0x01	; 1
 44a:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R12 = 0x00                                               */
 44c:	31 97       	sbiw	r30, 0x01	; 1
 44e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R13 = 0x00                                               */
 450:	31 97       	sbiw	r30, 0x01	; 1
 452:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R14 = 0x00                                               */
 454:	31 97       	sbiw	r30, 0x01	; 1
 456:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R15 = 0x00                                               */
 458:	31 97       	sbiw	r30, 0x01	; 1
 45a:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R16 = 0x00                                               */
 45c:	31 97       	sbiw	r30, 0x01	; 1
 45e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R17 = 0x00                                               */
 460:	31 97       	sbiw	r30, 0x01	; 1
 462:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R18 = 0x00                                               */
 464:	31 97       	sbiw	r30, 0x01	; 1
 466:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R19 = 0x00                                               */
 468:	31 97       	sbiw	r30, 0x01	; 1
 46a:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R20 = 0x00                                               */
 46c:	31 97       	sbiw	r30, 0x01	; 1
 46e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R21 = 0x00                                               */
 470:	31 97       	sbiw	r30, 0x01	; 1
 472:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R22 = 0x00                                               */
 474:	31 97       	sbiw	r30, 0x01	; 1
 476:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R23 = 0x00                                               */
 478:	31 97       	sbiw	r30, 0x01	; 1
 47a:	10 82       	st	Z, r1
 	
    tmp    = (INT16U)pdata;
    *stk-- = (INT8U)tmp;                    /* Simulate call to function with argument                  */
 47c:	31 97       	sbiw	r30, 0x01	; 1
 47e:	60 83       	st	Z, r22
    *stk-- = (INT8U)(tmp >> 8);		    /* R24, R25 contains argument pointer pdata 		*/
 480:	31 97       	sbiw	r30, 0x01	; 1
 482:	70 83       	st	Z, r23

    *stk-- = (INT8U)0x00;                   /* R26 = 0x00                                               */
 484:	31 97       	sbiw	r30, 0x01	; 1
 486:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R27 = 0x00                                               */
 488:	31 97       	sbiw	r30, 0x01	; 1
 48a:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R28 = 0x00                                               */
 48c:	31 97       	sbiw	r30, 0x01	; 1
 48e:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R29 = 0x00                                               */
 490:	31 97       	sbiw	r30, 0x01	; 1
 492:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R30 = 0x00                                               */
 494:	31 97       	sbiw	r30, 0x01	; 1
 496:	10 82       	st	Z, r1
    *stk-- = (INT8U)0x00;                   /* R31 = 0x00                                               */
 498:	31 97       	sbiw	r30, 0x01	; 1
 49a:	10 82       	st	Z, r1
#ifdef RAMPZ
    *stk-- = (INT8U)0x00;                   /* RAMPZ = 0x00                                             */
#endif
    *stk-- = (INT8U)0x80;                   /* SREG = Interrupts enabled                                */
 49c:	31 97       	sbiw	r30, 0x01	; 1
 49e:	80 e8       	ldi	r24, 0x80	; 128
 4a0:	80 83       	st	Z, r24
    return ((OS_STK *)stk);
}
 4a2:	ca 01       	movw	r24, r20
 4a4:	83 97       	sbiw	r24, 0x23	; 35
 4a6:	08 95       	ret

000004a8 <OSTaskCreateHook>:
* Note(s)    : 1) Interrupts are disabled during this call.
*********************************************************************************************************
*/
#if OS_CPU_HOOKS_EN > 0
void OSTaskCreateHook (OS_TCB *ptcb)
{
 4a8:	08 95       	ret

000004aa <OSTaskStatHook>:
*
* Arguments  : none
*********************************************************************************************************
*/
void OSTaskStatHook (void)
{
 4aa:	08 95       	ret

000004ac <OSTimeTickHook>:
*********************************************************************************************************
*/
#if (OS_CPU_HOOKS_EN > 0) 
//#if (OS_CPU_HOOKS_EN > 0) && (OS_TIME_TICK_HOOK_EN > 0)
void OSTimeTickHook (void)
{
 4ac:	08 95       	ret

000004ae <OSTaskIdle>:
 4ae:	f8 94       	cli
 4b0:	78 94       	sei
 4b2:	fd cf       	rjmp	.-6      	; 0x4ae <OSTaskIdle>

000004b4 <OSEventTaskRdy>:
 4b4:	0f 93       	push	r16
 4b6:	1f 93       	push	r17
 4b8:	cf 93       	push	r28
 4ba:	df 93       	push	r29
 4bc:	fc 01       	movw	r30, r24
 4be:	05 85       	ldd	r16, Z+13	; 0x0d
 4c0:	e0 2f       	mov	r30, r16
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	e1 5b       	subi	r30, 0xB1	; 177
 4c6:	fe 4f       	sbci	r31, 0xFE	; 254
 4c8:	10 81       	ld	r17, Z
 4ca:	21 2f       	mov	r18, r17
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	d9 01       	movw	r26, r18
 4d0:	a1 5b       	subi	r26, 0xB1	; 177
 4d2:	bd 4f       	sbci	r27, 0xFD	; 253
 4d4:	dc 91       	ld	r29, X
 4d6:	fc 01       	movw	r30, r24
 4d8:	e2 0f       	add	r30, r18
 4da:	f3 1f       	adc	r31, r19
 4dc:	52 81       	ldd	r21, Z+2	; 0x02
 4de:	a5 2f       	mov	r26, r21
 4e0:	b0 e0       	ldi	r27, 0x00	; 0
 4e2:	a1 5b       	subi	r26, 0xB1	; 177
 4e4:	be 4f       	sbci	r27, 0xFE	; 254
 4e6:	cc 91       	ld	r28, X
 4e8:	ac 2f       	mov	r26, r28
 4ea:	b0 e0       	ldi	r27, 0x00	; 0
 4ec:	a1 5b       	subi	r26, 0xB1	; 177
 4ee:	bd 4f       	sbci	r27, 0xFD	; 253
 4f0:	ac 91       	ld	r26, X
 4f2:	11 0f       	add	r17, r17
 4f4:	11 0f       	add	r17, r17
 4f6:	11 0f       	add	r17, r17
 4f8:	c1 0f       	add	r28, r17
 4fa:	ba 2f       	mov	r27, r26
 4fc:	b0 95       	com	r27
 4fe:	5b 23       	and	r21, r27
 500:	52 83       	std	Z+2, r21	; 0x02
 502:	51 11       	cpse	r21, r1
 504:	05 c0       	rjmp	.+10     	; 0x510 <OSEventTaskRdy+0x5c>
 506:	5d 2f       	mov	r21, r29
 508:	50 95       	com	r21
 50a:	05 23       	and	r16, r21
 50c:	fc 01       	movw	r30, r24
 50e:	05 87       	std	Z+13, r16	; 0x0d
 510:	ec 2f       	mov	r30, r28
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	ee 0f       	add	r30, r30
 516:	ff 1f       	adc	r31, r31
 518:	e4 5b       	subi	r30, 0xB4	; 180
 51a:	f9 4f       	sbci	r31, 0xF9	; 249
 51c:	01 90       	ld	r0, Z+
 51e:	f0 81       	ld	r31, Z
 520:	e0 2d       	mov	r30, r0
 522:	13 86       	std	Z+11, r1	; 0x0b
 524:	12 86       	std	Z+10, r1	; 0x0a
 526:	17 82       	std	Z+7, r1	; 0x07
 528:	16 82       	std	Z+6, r1	; 0x06
 52a:	71 87       	std	Z+9, r23	; 0x09
 52c:	60 87       	std	Z+8, r22	; 0x08
 52e:	40 95       	com	r20
 530:	84 85       	ldd	r24, Z+12	; 0x0c
 532:	48 23       	and	r20, r24
 534:	44 87       	std	Z+12, r20	; 0x0c
 536:	41 11       	cpse	r20, r1
 538:	0b c0       	rjmp	.+22     	; 0x550 <OSEventTaskRdy+0x9c>
 53a:	80 91 ad 05 	lds	r24, 0x05AD
 53e:	d8 2b       	or	r29, r24
 540:	d0 93 ad 05 	sts	0x05AD, r29
 544:	f9 01       	movw	r30, r18
 546:	e2 55       	subi	r30, 0x52	; 82
 548:	fa 4f       	sbci	r31, 0xFA	; 250
 54a:	80 81       	ld	r24, Z
 54c:	a8 2b       	or	r26, r24
 54e:	a0 83       	st	Z, r26
 550:	df 91       	pop	r29
 552:	cf 91       	pop	r28
 554:	1f 91       	pop	r17
 556:	0f 91       	pop	r16
 558:	08 95       	ret

0000055a <OSEventWaitListInit>:
 55a:	fc 01       	movw	r30, r24
 55c:	15 86       	std	Z+13, r1	; 0x0d
 55e:	32 96       	adiw	r30, 0x02	; 2
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	11 92       	st	Z+, r1
 564:	8f 5f       	subi	r24, 0xFF	; 255
 566:	88 30       	cpi	r24, 0x08	; 8
 568:	e1 f7       	brne	.-8      	; 0x562 <OSEventWaitListInit+0x8>
 56a:	08 95       	ret

0000056c <OSIntExit>:
 56c:	f8 94       	cli
 56e:	80 91 b8 05 	lds	r24, 0x05B8
 572:	81 50       	subi	r24, 0x01	; 1
 574:	80 93 b8 05 	sts	0x05B8, r24
 578:	90 91 95 05 	lds	r25, 0x0595
 57c:	89 2b       	or	r24, r25
 57e:	e1 f5       	brne	.+120    	; 0x5f8 <OSIntExit+0x8c>
 580:	e0 91 ad 05 	lds	r30, 0x05AD
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	e1 5b       	subi	r30, 0xB1	; 177
 588:	fe 4f       	sbci	r31, 0xFE	; 254
 58a:	80 81       	ld	r24, Z
 58c:	80 93 8c 03 	sts	0x038C, r24
 590:	e8 2f       	mov	r30, r24
 592:	f0 e0       	ldi	r31, 0x00	; 0
 594:	e2 55       	subi	r30, 0x52	; 82
 596:	fa 4f       	sbci	r31, 0xFA	; 250
 598:	e0 81       	ld	r30, Z
 59a:	f0 e0       	ldi	r31, 0x00	; 0
 59c:	e1 5b       	subi	r30, 0xB1	; 177
 59e:	fe 4f       	sbci	r31, 0xFE	; 254
 5a0:	88 0f       	add	r24, r24
 5a2:	88 0f       	add	r24, r24
 5a4:	88 0f       	add	r24, r24
 5a6:	90 81       	ld	r25, Z
 5a8:	89 0f       	add	r24, r25
 5aa:	80 93 9b 05 	sts	0x059B, r24
 5ae:	90 91 9c 05 	lds	r25, 0x059C
 5b2:	89 17       	cp	r24, r25
 5b4:	09 f1       	breq	.+66     	; 0x5f8 <OSIntExit+0x8c>
 5b6:	e8 2f       	mov	r30, r24
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	ee 0f       	add	r30, r30
 5bc:	ff 1f       	adc	r31, r31
 5be:	e4 5b       	subi	r30, 0xB4	; 180
 5c0:	f9 4f       	sbci	r31, 0xF9	; 249
 5c2:	80 81       	ld	r24, Z
 5c4:	91 81       	ldd	r25, Z+1	; 0x01
 5c6:	90 93 ac 05 	sts	0x05AC, r25
 5ca:	80 93 ab 05 	sts	0x05AB, r24
 5ce:	80 91 9f 05 	lds	r24, 0x059F
 5d2:	90 91 a0 05 	lds	r25, 0x05A0
 5d6:	a0 91 a1 05 	lds	r26, 0x05A1
 5da:	b0 91 a2 05 	lds	r27, 0x05A2
 5de:	01 96       	adiw	r24, 0x01	; 1
 5e0:	a1 1d       	adc	r26, r1
 5e2:	b1 1d       	adc	r27, r1
 5e4:	80 93 9f 05 	sts	0x059F, r24
 5e8:	90 93 a0 05 	sts	0x05A0, r25
 5ec:	a0 93 a1 05 	sts	0x05A1, r26
 5f0:	b0 93 a2 05 	sts	0x05A2, r27
 5f4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <OSIntCtxSw>
 5f8:	78 94       	sei
 5fa:	08 95       	ret

000005fc <OSSched>:
 5fc:	f8 94       	cli
 5fe:	90 91 b8 05 	lds	r25, 0x05B8
 602:	80 91 95 05 	lds	r24, 0x0595
 606:	89 2b       	or	r24, r25
 608:	d1 f5       	brne	.+116    	; 0x67e <OSSched+0x82>
 60a:	e0 91 ad 05 	lds	r30, 0x05AD
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	e1 5b       	subi	r30, 0xB1	; 177
 612:	fe 4f       	sbci	r31, 0xFE	; 254
 614:	80 81       	ld	r24, Z
 616:	e8 2f       	mov	r30, r24
 618:	f0 e0       	ldi	r31, 0x00	; 0
 61a:	e2 55       	subi	r30, 0x52	; 82
 61c:	fa 4f       	sbci	r31, 0xFA	; 250
 61e:	e0 81       	ld	r30, Z
 620:	f0 e0       	ldi	r31, 0x00	; 0
 622:	e1 5b       	subi	r30, 0xB1	; 177
 624:	fe 4f       	sbci	r31, 0xFE	; 254
 626:	88 0f       	add	r24, r24
 628:	88 0f       	add	r24, r24
 62a:	88 0f       	add	r24, r24
 62c:	90 81       	ld	r25, Z
 62e:	e8 2f       	mov	r30, r24
 630:	e9 0f       	add	r30, r25
 632:	e0 93 9b 05 	sts	0x059B, r30
 636:	80 91 9c 05 	lds	r24, 0x059C
 63a:	e8 17       	cp	r30, r24
 63c:	01 f1       	breq	.+64     	; 0x67e <OSSched+0x82>
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	ee 0f       	add	r30, r30
 642:	ff 1f       	adc	r31, r31
 644:	e4 5b       	subi	r30, 0xB4	; 180
 646:	f9 4f       	sbci	r31, 0xF9	; 249
 648:	80 81       	ld	r24, Z
 64a:	91 81       	ldd	r25, Z+1	; 0x01
 64c:	90 93 ac 05 	sts	0x05AC, r25
 650:	80 93 ab 05 	sts	0x05AB, r24
 654:	80 91 9f 05 	lds	r24, 0x059F
 658:	90 91 a0 05 	lds	r25, 0x05A0
 65c:	a0 91 a1 05 	lds	r26, 0x05A1
 660:	b0 91 a2 05 	lds	r27, 0x05A2
 664:	01 96       	adiw	r24, 0x01	; 1
 666:	a1 1d       	adc	r26, r1
 668:	b1 1d       	adc	r27, r1
 66a:	80 93 9f 05 	sts	0x059F, r24
 66e:	90 93 a0 05 	sts	0x05A0, r25
 672:	a0 93 a1 05 	sts	0x05A1, r26
 676:	b0 93 a2 05 	sts	0x05A2, r27
 67a:	0e 94 83 00 	call	0x106	; 0x106 <OSCtxSw>
 67e:	78 94       	sei
 680:	08 95       	ret

00000682 <OSStart>:
 682:	80 91 96 05 	lds	r24, 0x0596
 686:	81 11       	cpse	r24, r1
 688:	26 c0       	rjmp	.+76     	; 0x6d6 <OSStart+0x54>
 68a:	e0 91 ad 05 	lds	r30, 0x05AD
 68e:	f0 e0       	ldi	r31, 0x00	; 0
 690:	e1 5b       	subi	r30, 0xB1	; 177
 692:	fe 4f       	sbci	r31, 0xFE	; 254
 694:	e0 81       	ld	r30, Z
 696:	ae 2f       	mov	r26, r30
 698:	b0 e0       	ldi	r27, 0x00	; 0
 69a:	a2 55       	subi	r26, 0x52	; 82
 69c:	ba 4f       	sbci	r27, 0xFA	; 250
 69e:	ac 91       	ld	r26, X
 6a0:	b0 e0       	ldi	r27, 0x00	; 0
 6a2:	a1 5b       	subi	r26, 0xB1	; 177
 6a4:	be 4f       	sbci	r27, 0xFE	; 254
 6a6:	ee 0f       	add	r30, r30
 6a8:	ee 0f       	add	r30, r30
 6aa:	ee 0f       	add	r30, r30
 6ac:	8c 91       	ld	r24, X
 6ae:	e8 0f       	add	r30, r24
 6b0:	e0 93 9b 05 	sts	0x059B, r30
 6b4:	e0 93 9c 05 	sts	0x059C, r30
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	ee 0f       	add	r30, r30
 6bc:	ff 1f       	adc	r31, r31
 6be:	e4 5b       	subi	r30, 0xB4	; 180
 6c0:	f9 4f       	sbci	r31, 0xF9	; 249
 6c2:	80 81       	ld	r24, Z
 6c4:	91 81       	ldd	r25, Z+1	; 0x01
 6c6:	90 93 ac 05 	sts	0x05AC, r25
 6ca:	80 93 ab 05 	sts	0x05AB, r24
 6ce:	90 93 ba 05 	sts	0x05BA, r25
 6d2:	80 93 b9 05 	sts	0x05B9, r24
 6d6:	0e 94 53 00 	call	0xa6	; 0xa6 <OSStartHighRdy>
 6da:	08 95       	ret

000006dc <OSTCBInit>:
 6dc:	cf 93       	push	r28
 6de:	df 93       	push	r29
 6e0:	f8 94       	cli
 6e2:	e0 91 a7 05 	lds	r30, 0x05A7
 6e6:	f0 91 a8 05 	lds	r31, 0x05A8
 6ea:	30 97       	sbiw	r30, 0x00	; 0
 6ec:	09 f4       	brne	.+2      	; 0x6f0 <OSTCBInit+0x14>
 6ee:	4f c0       	rjmp	.+158    	; 0x78e <OSTCBInit+0xb2>
 6f0:	22 81       	ldd	r18, Z+2	; 0x02
 6f2:	33 81       	ldd	r19, Z+3	; 0x03
 6f4:	30 93 a8 05 	sts	0x05A8, r19
 6f8:	20 93 a7 05 	sts	0x05A7, r18
 6fc:	78 94       	sei
 6fe:	71 83       	std	Z+1, r23	; 0x01
 700:	60 83       	st	Z, r22
 702:	85 87       	std	Z+13, r24	; 0x0d
 704:	14 86       	std	Z+12, r1	; 0x0c
 706:	13 86       	std	Z+11, r1	; 0x0b
 708:	12 86       	std	Z+10, r1	; 0x0a
 70a:	c8 2f       	mov	r28, r24
 70c:	c6 95       	lsr	r28
 70e:	c6 95       	lsr	r28
 710:	c6 95       	lsr	r28
 712:	c7 87       	std	Z+15, r28	; 0x0f
 714:	d0 e0       	ldi	r29, 0x00	; 0
 716:	c1 5b       	subi	r28, 0xB1	; 177
 718:	dd 4f       	sbci	r29, 0xFD	; 253
 71a:	98 81       	ld	r25, Y
 71c:	91 8b       	std	Z+17, r25	; 0x11
 71e:	c8 2f       	mov	r28, r24
 720:	c7 70       	andi	r28, 0x07	; 7
 722:	c6 87       	std	Z+14, r28	; 0x0e
 724:	d0 e0       	ldi	r29, 0x00	; 0
 726:	c1 5b       	subi	r28, 0xB1	; 177
 728:	dd 4f       	sbci	r29, 0xFD	; 253
 72a:	98 81       	ld	r25, Y
 72c:	90 8b       	std	Z+16, r25	; 0x10
 72e:	17 82       	std	Z+7, r1	; 0x07
 730:	16 82       	std	Z+6, r1	; 0x06
 732:	11 86       	std	Z+9, r1	; 0x09
 734:	10 86       	std	Z+8, r1	; 0x08
 736:	f8 94       	cli
 738:	a8 2f       	mov	r26, r24
 73a:	b0 e0       	ldi	r27, 0x00	; 0
 73c:	aa 0f       	add	r26, r26
 73e:	bb 1f       	adc	r27, r27
 740:	a4 5b       	subi	r26, 0xB4	; 180
 742:	b9 4f       	sbci	r27, 0xF9	; 249
 744:	ed 93       	st	X+, r30
 746:	fc 93       	st	X, r31
 748:	a0 91 9d 05 	lds	r26, 0x059D
 74c:	b0 91 9e 05 	lds	r27, 0x059E
 750:	b3 83       	std	Z+3, r27	; 0x03
 752:	a2 83       	std	Z+2, r26	; 0x02
 754:	15 82       	std	Z+5, r1	; 0x05
 756:	14 82       	std	Z+4, r1	; 0x04
 758:	10 97       	sbiw	r26, 0x00	; 0
 75a:	21 f0       	breq	.+8      	; 0x764 <OSTCBInit+0x88>
 75c:	15 96       	adiw	r26, 0x05	; 5
 75e:	fc 93       	st	X, r31
 760:	ee 93       	st	-X, r30
 762:	14 97       	sbiw	r26, 0x04	; 4
 764:	f0 93 9e 05 	sts	0x059E, r31
 768:	e0 93 9d 05 	sts	0x059D, r30
 76c:	90 91 ad 05 	lds	r25, 0x05AD
 770:	81 89       	ldd	r24, Z+17	; 0x11
 772:	89 2b       	or	r24, r25
 774:	80 93 ad 05 	sts	0x05AD, r24
 778:	a7 85       	ldd	r26, Z+15	; 0x0f
 77a:	b0 e0       	ldi	r27, 0x00	; 0
 77c:	a2 55       	subi	r26, 0x52	; 82
 77e:	ba 4f       	sbci	r27, 0xFA	; 250
 780:	9c 91       	ld	r25, X
 782:	80 89       	ldd	r24, Z+16	; 0x10
 784:	89 2b       	or	r24, r25
 786:	8c 93       	st	X, r24
 788:	78 94       	sei
 78a:	80 e0       	ldi	r24, 0x00	; 0
 78c:	02 c0       	rjmp	.+4      	; 0x792 <OSTCBInit+0xb6>
 78e:	78 94       	sei
 790:	86 e4       	ldi	r24, 0x46	; 70
 792:	df 91       	pop	r29
 794:	cf 91       	pop	r28
 796:	08 95       	ret

00000798 <OSTimeTick>:
 798:	0e 94 56 02 	call	0x4ac	; 0x4ac <OSTimeTickHook>
 79c:	e0 91 9d 05 	lds	r30, 0x059D
 7a0:	f0 91 9e 05 	lds	r31, 0x059E
 7a4:	85 85       	ldd	r24, Z+13	; 0x0d
 7a6:	8f 33       	cpi	r24, 0x3F	; 63
 7a8:	39 f1       	breq	.+78     	; 0x7f8 <OSTimeTick+0x60>
 7aa:	40 91 ad 05 	lds	r20, 0x05AD
 7ae:	21 e0       	ldi	r18, 0x01	; 1
 7b0:	30 e0       	ldi	r19, 0x00	; 0
 7b2:	f8 94       	cli
 7b4:	82 85       	ldd	r24, Z+10	; 0x0a
 7b6:	93 85       	ldd	r25, Z+11	; 0x0b
 7b8:	00 97       	sbiw	r24, 0x00	; 0
 7ba:	a9 f0       	breq	.+42     	; 0x7e6 <OSTimeTick+0x4e>
 7bc:	01 97       	sbiw	r24, 0x01	; 1
 7be:	93 87       	std	Z+11, r25	; 0x0b
 7c0:	82 87       	std	Z+10, r24	; 0x0a
 7c2:	89 2b       	or	r24, r25
 7c4:	81 f4       	brne	.+32     	; 0x7e6 <OSTimeTick+0x4e>
 7c6:	84 85       	ldd	r24, Z+12	; 0x0c
 7c8:	83 fd       	sbrc	r24, 3
 7ca:	0b c0       	rjmp	.+22     	; 0x7e2 <OSTimeTick+0x4a>
 7cc:	81 89       	ldd	r24, Z+17	; 0x11
 7ce:	a7 85       	ldd	r26, Z+15	; 0x0f
 7d0:	b0 e0       	ldi	r27, 0x00	; 0
 7d2:	a2 55       	subi	r26, 0x52	; 82
 7d4:	ba 4f       	sbci	r27, 0xFA	; 250
 7d6:	5c 91       	ld	r21, X
 7d8:	90 89       	ldd	r25, Z+16	; 0x10
 7da:	95 2b       	or	r25, r21
 7dc:	9c 93       	st	X, r25
 7de:	48 2b       	or	r20, r24
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <OSTimeTick+0x4e>
 7e2:	33 87       	std	Z+11, r19	; 0x0b
 7e4:	22 87       	std	Z+10, r18	; 0x0a
 7e6:	02 80       	ldd	r0, Z+2	; 0x02
 7e8:	f3 81       	ldd	r31, Z+3	; 0x03
 7ea:	e0 2d       	mov	r30, r0
 7ec:	78 94       	sei
 7ee:	85 85       	ldd	r24, Z+13	; 0x0d
 7f0:	8f 33       	cpi	r24, 0x3F	; 63
 7f2:	f9 f6       	brne	.-66     	; 0x7b2 <OSTimeTick+0x1a>
 7f4:	40 93 ad 05 	sts	0x05AD, r20
 7f8:	f8 94       	cli
 7fa:	80 91 bb 05 	lds	r24, 0x05BB
 7fe:	90 91 bc 05 	lds	r25, 0x05BC
 802:	a0 91 bd 05 	lds	r26, 0x05BD
 806:	b0 91 be 05 	lds	r27, 0x05BE
 80a:	01 96       	adiw	r24, 0x01	; 1
 80c:	a1 1d       	adc	r26, r1
 80e:	b1 1d       	adc	r27, r1
 810:	80 93 bb 05 	sts	0x05BB, r24
 814:	90 93 bc 05 	sts	0x05BC, r25
 818:	a0 93 bd 05 	sts	0x05BD, r26
 81c:	b0 93 be 05 	sts	0x05BE, r27
 820:	78 94       	sei
 822:	08 95       	ret

00000824 <OSMboxCreate>:
 824:	cf 93       	push	r28
 826:	df 93       	push	r29
 828:	f8 94       	cli
 82a:	c0 91 b6 05 	lds	r28, 0x05B6
 82e:	d0 91 b7 05 	lds	r29, 0x05B7
 832:	20 97       	sbiw	r28, 0x00	; 0
 834:	31 f0       	breq	.+12     	; 0x842 <OSMboxCreate+0x1e>
 836:	28 81       	ld	r18, Y
 838:	39 81       	ldd	r19, Y+1	; 0x01
 83a:	30 93 b7 05 	sts	0x05B7, r19
 83e:	20 93 b6 05 	sts	0x05B6, r18
 842:	78 94       	sei
 844:	20 97       	sbiw	r28, 0x00	; 0
 846:	39 f0       	breq	.+14     	; 0x856 <OSMboxCreate+0x32>
 848:	21 e0       	ldi	r18, 0x01	; 1
 84a:	2c 87       	std	Y+12, r18	; 0x0c
 84c:	99 83       	std	Y+1, r25	; 0x01
 84e:	88 83       	st	Y, r24
 850:	ce 01       	movw	r24, r28
 852:	0e 94 ad 02 	call	0x55a	; 0x55a <OSEventWaitListInit>
 856:	ce 01       	movw	r24, r28
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	08 95       	ret

0000085e <OSMboxPost>:
 85e:	f8 94       	cli
 860:	fc 01       	movw	r30, r24
 862:	24 85       	ldd	r18, Z+12	; 0x0c
 864:	21 30       	cpi	r18, 0x01	; 1
 866:	19 f0       	breq	.+6      	; 0x86e <OSMboxPost+0x10>
 868:	78 94       	sei
 86a:	81 e0       	ldi	r24, 0x01	; 1
 86c:	08 95       	ret
 86e:	fc 01       	movw	r30, r24
 870:	25 85       	ldd	r18, Z+13	; 0x0d
 872:	22 23       	and	r18, r18
 874:	41 f0       	breq	.+16     	; 0x886 <OSMboxPost+0x28>
 876:	42 e0       	ldi	r20, 0x02	; 2
 878:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <OSEventTaskRdy>
 87c:	78 94       	sei
 87e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <OSSched>
 882:	80 e0       	ldi	r24, 0x00	; 0
 884:	08 95       	ret
 886:	fc 01       	movw	r30, r24
 888:	20 81       	ld	r18, Z
 88a:	31 81       	ldd	r19, Z+1	; 0x01
 88c:	23 2b       	or	r18, r19
 88e:	19 f0       	breq	.+6      	; 0x896 <OSMboxPost+0x38>
 890:	78 94       	sei
 892:	84 e1       	ldi	r24, 0x14	; 20
 894:	08 95       	ret
 896:	fc 01       	movw	r30, r24
 898:	71 83       	std	Z+1, r23	; 0x01
 89a:	60 83       	st	Z, r22
 89c:	78 94       	sei
 89e:	80 e0       	ldi	r24, 0x00	; 0
 8a0:	08 95       	ret

000008a2 <OSSemCreate>:
 8a2:	cf 93       	push	r28
 8a4:	df 93       	push	r29
 8a6:	f8 94       	cli
 8a8:	c0 91 b6 05 	lds	r28, 0x05B6
 8ac:	d0 91 b7 05 	lds	r29, 0x05B7
 8b0:	20 97       	sbiw	r28, 0x00	; 0
 8b2:	31 f0       	breq	.+12     	; 0x8c0 <OSSemCreate+0x1e>
 8b4:	28 81       	ld	r18, Y
 8b6:	39 81       	ldd	r19, Y+1	; 0x01
 8b8:	30 93 b7 05 	sts	0x05B7, r19
 8bc:	20 93 b6 05 	sts	0x05B6, r18
 8c0:	78 94       	sei
 8c2:	20 97       	sbiw	r28, 0x00	; 0
 8c4:	39 f0       	breq	.+14     	; 0x8d4 <OSSemCreate+0x32>
 8c6:	23 e0       	ldi	r18, 0x03	; 3
 8c8:	2c 87       	std	Y+12, r18	; 0x0c
 8ca:	9b 87       	std	Y+11, r25	; 0x0b
 8cc:	8a 87       	std	Y+10, r24	; 0x0a
 8ce:	ce 01       	movw	r24, r28
 8d0:	0e 94 ad 02 	call	0x55a	; 0x55a <OSEventWaitListInit>
 8d4:	ce 01       	movw	r24, r28
 8d6:	df 91       	pop	r29
 8d8:	cf 91       	pop	r28
 8da:	08 95       	ret

000008dc <OSTaskCreate>:
 8dc:	bf 92       	push	r11
 8de:	cf 92       	push	r12
 8e0:	df 92       	push	r13
 8e2:	ef 92       	push	r14
 8e4:	ff 92       	push	r15
 8e6:	0f 93       	push	r16
 8e8:	1f 93       	push	r17
 8ea:	cf 93       	push	r28
 8ec:	df 93       	push	r29
 8ee:	b2 2e       	mov	r11, r18
 8f0:	2f e3       	ldi	r18, 0x3F	; 63
 8f2:	2b 15       	cp	r18, r11
 8f4:	08 f4       	brcc	.+2      	; 0x8f8 <OSTaskCreate+0x1c>
 8f6:	4f c0       	rjmp	.+158    	; 0x996 <__stack+0x97>
 8f8:	f8 94       	cli
 8fa:	cb 2d       	mov	r28, r11
 8fc:	d0 e0       	ldi	r29, 0x00	; 0
 8fe:	fe 01       	movw	r30, r28
 900:	ee 0f       	add	r30, r30
 902:	ff 1f       	adc	r31, r31
 904:	e4 5b       	subi	r30, 0xB4	; 180
 906:	f9 4f       	sbci	r31, 0xF9	; 249
 908:	01 90       	ld	r0, Z+
 90a:	f0 81       	ld	r31, Z
 90c:	e0 2d       	mov	r30, r0
 90e:	ef 2b       	or	r30, r31
 910:	09 f0       	breq	.+2      	; 0x914 <__stack+0x15>
 912:	3e c0       	rjmp	.+124    	; 0x990 <__stack+0x91>
 914:	fe 01       	movw	r30, r28
 916:	ee 0f       	add	r30, r30
 918:	ff 1f       	adc	r31, r31
 91a:	e4 5b       	subi	r30, 0xB4	; 180
 91c:	f9 4f       	sbci	r31, 0xF9	; 249
 91e:	21 e0       	ldi	r18, 0x01	; 1
 920:	30 e0       	ldi	r19, 0x00	; 0
 922:	31 83       	std	Z+1, r19	; 0x01
 924:	20 83       	st	Z, r18
 926:	78 94       	sei
 928:	20 e0       	ldi	r18, 0x00	; 0
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	0e 94 0a 02 	call	0x414	; 0x414 <OSTaskStkInit>
 930:	c1 2c       	mov	r12, r1
 932:	d1 2c       	mov	r13, r1
 934:	e1 2c       	mov	r14, r1
 936:	f1 2c       	mov	r15, r1
 938:	00 e0       	ldi	r16, 0x00	; 0
 93a:	10 e0       	ldi	r17, 0x00	; 0
 93c:	20 e0       	ldi	r18, 0x00	; 0
 93e:	30 e0       	ldi	r19, 0x00	; 0
 940:	40 e0       	ldi	r20, 0x00	; 0
 942:	50 e0       	ldi	r21, 0x00	; 0
 944:	bc 01       	movw	r22, r24
 946:	8b 2d       	mov	r24, r11
 948:	0e 94 6e 03 	call	0x6dc	; 0x6dc <OSTCBInit>
 94c:	81 11       	cpse	r24, r1
 94e:	17 c0       	rjmp	.+46     	; 0x97e <__stack+0x7f>
 950:	f8 94       	cli
 952:	80 91 aa 05 	lds	r24, 0x05AA
 956:	8f 5f       	subi	r24, 0xFF	; 255
 958:	80 93 aa 05 	sts	0x05AA, r24
 95c:	cc 0f       	add	r28, r28
 95e:	dd 1f       	adc	r29, r29
 960:	c4 5b       	subi	r28, 0xB4	; 180
 962:	d9 4f       	sbci	r29, 0xF9	; 249
 964:	88 81       	ld	r24, Y
 966:	99 81       	ldd	r25, Y+1	; 0x01
 968:	0e 94 54 02 	call	0x4a8	; 0x4a8 <OSTaskCreateHook>
 96c:	78 94       	sei
 96e:	80 91 96 05 	lds	r24, 0x0596
 972:	88 23       	and	r24, r24
 974:	91 f0       	breq	.+36     	; 0x99a <__stack+0x9b>
 976:	0e 94 fe 02 	call	0x5fc	; 0x5fc <OSSched>
 97a:	80 e0       	ldi	r24, 0x00	; 0
 97c:	0f c0       	rjmp	.+30     	; 0x99c <__stack+0x9d>
 97e:	f8 94       	cli
 980:	cc 0f       	add	r28, r28
 982:	dd 1f       	adc	r29, r29
 984:	c4 5b       	subi	r28, 0xB4	; 180
 986:	d9 4f       	sbci	r29, 0xF9	; 249
 988:	19 82       	std	Y+1, r1	; 0x01
 98a:	18 82       	st	Y, r1
 98c:	78 94       	sei
 98e:	06 c0       	rjmp	.+12     	; 0x99c <__stack+0x9d>
 990:	78 94       	sei
 992:	88 e2       	ldi	r24, 0x28	; 40
 994:	03 c0       	rjmp	.+6      	; 0x99c <__stack+0x9d>
 996:	8a e2       	ldi	r24, 0x2A	; 42
 998:	01 c0       	rjmp	.+2      	; 0x99c <__stack+0x9d>
 99a:	80 e0       	ldi	r24, 0x00	; 0
 99c:	df 91       	pop	r29
 99e:	cf 91       	pop	r28
 9a0:	1f 91       	pop	r17
 9a2:	0f 91       	pop	r16
 9a4:	ff 90       	pop	r15
 9a6:	ef 90       	pop	r14
 9a8:	df 90       	pop	r13
 9aa:	cf 90       	pop	r12
 9ac:	bf 90       	pop	r11
 9ae:	08 95       	ret

000009b0 <OSInit>:
 9b0:	10 92 bb 05 	sts	0x05BB, r1
 9b4:	10 92 bc 05 	sts	0x05BC, r1
 9b8:	10 92 bd 05 	sts	0x05BD, r1
 9bc:	10 92 be 05 	sts	0x05BE, r1
 9c0:	10 92 b8 05 	sts	0x05B8, r1
 9c4:	10 92 95 05 	sts	0x0595, r1
 9c8:	10 92 aa 05 	sts	0x05AA, r1
 9cc:	10 92 96 05 	sts	0x0596, r1
 9d0:	10 92 97 05 	sts	0x0597, r1
 9d4:	10 92 98 05 	sts	0x0598, r1
 9d8:	10 92 99 05 	sts	0x0599, r1
 9dc:	10 92 9a 05 	sts	0x059A, r1
 9e0:	10 92 9f 05 	sts	0x059F, r1
 9e4:	10 92 a0 05 	sts	0x05A0, r1
 9e8:	10 92 a1 05 	sts	0x05A1, r1
 9ec:	10 92 a2 05 	sts	0x05A2, r1
 9f0:	10 92 ad 05 	sts	0x05AD, r1
 9f4:	ee ea       	ldi	r30, 0xAE	; 174
 9f6:	f5 e0       	ldi	r31, 0x05	; 5
 9f8:	86 eb       	ldi	r24, 0xB6	; 182
 9fa:	95 e0       	ldi	r25, 0x05	; 5
 9fc:	11 92       	st	Z+, r1
 9fe:	e8 17       	cp	r30, r24
 a00:	f9 07       	cpc	r31, r25
 a02:	e1 f7       	brne	.-8      	; 0x9fc <OSInit+0x4c>
 a04:	10 92 9c 05 	sts	0x059C, r1
 a08:	10 92 9b 05 	sts	0x059B, r1
 a0c:	10 92 ac 05 	sts	0x05AC, r1
 a10:	10 92 ab 05 	sts	0x05AB, r1
 a14:	10 92 ba 05 	sts	0x05BA, r1
 a18:	10 92 b9 05 	sts	0x05B9, r1
 a1c:	10 92 9e 05 	sts	0x059E, r1
 a20:	10 92 9d 05 	sts	0x059D, r1
 a24:	ec e4       	ldi	r30, 0x4C	; 76
 a26:	f6 e0       	ldi	r31, 0x06	; 6
 a28:	8c ec       	ldi	r24, 0xCC	; 204
 a2a:	96 e0       	ldi	r25, 0x06	; 6
 a2c:	11 92       	st	Z+, r1
 a2e:	11 92       	st	Z+, r1
 a30:	e8 17       	cp	r30, r24
 a32:	f9 07       	cpc	r31, r25
 a34:	d9 f7       	brne	.-10     	; 0xa2c <OSInit+0x7c>
 a36:	8a e6       	ldi	r24, 0x6A	; 106
 a38:	92 e0       	ldi	r25, 0x02	; 2
 a3a:	2c e0       	ldi	r18, 0x0C	; 12
 a3c:	33 e0       	ldi	r19, 0x03	; 3
 a3e:	fc 01       	movw	r30, r24
 a40:	70 97       	sbiw	r30, 0x10	; 16
 a42:	91 83       	std	Z+1, r25	; 0x01
 a44:	80 83       	st	Z, r24
 a46:	42 96       	adiw	r24, 0x12	; 18
 a48:	82 17       	cp	r24, r18
 a4a:	93 07       	cpc	r25, r19
 a4c:	c1 f7       	brne	.-16     	; 0xa3e <OSInit+0x8e>
 a4e:	10 92 fd 02 	sts	0x02FD, r1
 a52:	10 92 fc 02 	sts	0x02FC, r1
 a56:	88 e5       	ldi	r24, 0x58	; 88
 a58:	92 e0       	ldi	r25, 0x02	; 2
 a5a:	90 93 a8 05 	sts	0x05A8, r25
 a5e:	80 93 a7 05 	sts	0x05A7, r24
 a62:	8d ec       	ldi	r24, 0xCD	; 205
 a64:	95 e0       	ldi	r25, 0x05	; 5
 a66:	2b e4       	ldi	r18, 0x4B	; 75
 a68:	36 e0       	ldi	r19, 0x06	; 6
 a6a:	fc 01       	movw	r30, r24
 a6c:	3e 97       	sbiw	r30, 0x0e	; 14
 a6e:	91 83       	std	Z+1, r25	; 0x01
 a70:	80 83       	st	Z, r24
 a72:	0e 96       	adiw	r24, 0x0e	; 14
 a74:	82 17       	cp	r24, r18
 a76:	93 07       	cpc	r25, r19
 a78:	c1 f7       	brne	.-16     	; 0xa6a <OSInit+0xba>
 a7a:	10 92 3e 06 	sts	0x063E, r1
 a7e:	10 92 3d 06 	sts	0x063D, r1
 a82:	8f eb       	ldi	r24, 0xBF	; 191
 a84:	95 e0       	ldi	r25, 0x05	; 5
 a86:	90 93 b7 05 	sts	0x05B7, r25
 a8a:	80 93 b6 05 	sts	0x05B6, r24
 a8e:	2f e3       	ldi	r18, 0x3F	; 63
 a90:	4b e8       	ldi	r20, 0x8B	; 139
 a92:	53 e0       	ldi	r21, 0x03	; 3
 a94:	60 e0       	ldi	r22, 0x00	; 0
 a96:	70 e0       	ldi	r23, 0x00	; 0
 a98:	87 e5       	ldi	r24, 0x57	; 87
 a9a:	92 e0       	ldi	r25, 0x02	; 2
 a9c:	0e 94 6e 04 	call	0x8dc	; 0x8dc <OSTaskCreate>
 aa0:	2e e3       	ldi	r18, 0x3E	; 62
 aa2:	4b e4       	ldi	r20, 0x4B	; 75
 aa4:	53 e0       	ldi	r21, 0x03	; 3
 aa6:	60 e0       	ldi	r22, 0x00	; 0
 aa8:	70 e0       	ldi	r23, 0x00	; 0
 aaa:	81 ea       	ldi	r24, 0xA1	; 161
 aac:	95 e0       	ldi	r25, 0x05	; 5
 aae:	0e 94 6e 04 	call	0x8dc	; 0x8dc <OSTaskCreate>
 ab2:	08 95       	ret

00000ab4 <OSTimeDly>:
 ab4:	00 97       	sbiw	r24, 0x00	; 0
 ab6:	e1 f0       	breq	.+56     	; 0xaf0 <OSTimeDly+0x3c>
 ab8:	f8 94       	cli
 aba:	e0 91 b9 05 	lds	r30, 0x05B9
 abe:	f0 91 ba 05 	lds	r31, 0x05BA
 ac2:	a7 85       	ldd	r26, Z+15	; 0x0f
 ac4:	b0 e0       	ldi	r27, 0x00	; 0
 ac6:	a2 55       	subi	r26, 0x52	; 82
 ac8:	ba 4f       	sbci	r27, 0xFA	; 250
 aca:	20 89       	ldd	r18, Z+16	; 0x10
 acc:	20 95       	com	r18
 ace:	3c 91       	ld	r19, X
 ad0:	23 23       	and	r18, r19
 ad2:	2c 93       	st	X, r18
 ad4:	21 11       	cpse	r18, r1
 ad6:	07 c0       	rjmp	.+14     	; 0xae6 <OSTimeDly+0x32>
 ad8:	21 89       	ldd	r18, Z+17	; 0x11
 ada:	20 95       	com	r18
 adc:	30 91 ad 05 	lds	r19, 0x05AD
 ae0:	23 23       	and	r18, r19
 ae2:	20 93 ad 05 	sts	0x05AD, r18
 ae6:	93 87       	std	Z+11, r25	; 0x0b
 ae8:	82 87       	std	Z+10, r24	; 0x0a
 aea:	78 94       	sei
 aec:	0e 94 fe 02 	call	0x5fc	; 0x5fc <OSSched>
 af0:	08 95       	ret

00000af2 <OSStatInit>:
 af2:	82 e0       	ldi	r24, 0x02	; 2
 af4:	90 e0       	ldi	r25, 0x00	; 0
 af6:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
 afa:	f8 94       	cli
 afc:	10 92 97 05 	sts	0x0597, r1
 b00:	10 92 98 05 	sts	0x0598, r1
 b04:	10 92 99 05 	sts	0x0599, r1
 b08:	10 92 9a 05 	sts	0x059A, r1
 b0c:	78 94       	sei
 b0e:	88 ec       	ldi	r24, 0xC8	; 200
 b10:	90 e0       	ldi	r25, 0x00	; 0
 b12:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
 b16:	f8 94       	cli
 b18:	80 91 97 05 	lds	r24, 0x0597
 b1c:	90 91 98 05 	lds	r25, 0x0598
 b20:	a0 91 99 05 	lds	r26, 0x0599
 b24:	b0 91 9a 05 	lds	r27, 0x059A
 b28:	80 93 a3 05 	sts	0x05A3, r24
 b2c:	90 93 a4 05 	sts	0x05A4, r25
 b30:	a0 93 a5 05 	sts	0x05A5, r26
 b34:	b0 93 a6 05 	sts	0x05A6, r27
 b38:	81 e0       	ldi	r24, 0x01	; 1
 b3a:	80 93 4b 06 	sts	0x064B, r24
 b3e:	78 94       	sei
 b40:	08 95       	ret

00000b42 <OSTaskStat>:
 b42:	80 91 4b 06 	lds	r24, 0x064B
 b46:	81 11       	cpse	r24, r1
 b48:	08 c0       	rjmp	.+16     	; 0xb5a <OSTaskStat+0x18>
 b4a:	80 e9       	ldi	r24, 0x90	; 144
 b4c:	91 e0       	ldi	r25, 0x01	; 1
 b4e:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
 b52:	80 91 4b 06 	lds	r24, 0x064B
 b56:	88 23       	and	r24, r24
 b58:	c1 f3       	breq	.-16     	; 0xb4a <OSTaskStat+0x8>
 b5a:	c4 e6       	ldi	r28, 0x64	; 100
 b5c:	f8 94       	cli
 b5e:	20 91 97 05 	lds	r18, 0x0597
 b62:	30 91 98 05 	lds	r19, 0x0598
 b66:	40 91 99 05 	lds	r20, 0x0599
 b6a:	50 91 9a 05 	lds	r21, 0x059A
 b6e:	20 93 cc 06 	sts	0x06CC, r18
 b72:	30 93 cd 06 	sts	0x06CD, r19
 b76:	40 93 ce 06 	sts	0x06CE, r20
 b7a:	50 93 cf 06 	sts	0x06CF, r21
 b7e:	10 92 97 05 	sts	0x0597, r1
 b82:	10 92 98 05 	sts	0x0598, r1
 b86:	10 92 99 05 	sts	0x0599, r1
 b8a:	10 92 9a 05 	sts	0x059A, r1
 b8e:	78 94       	sei
 b90:	c0 90 a3 05 	lds	r12, 0x05A3
 b94:	d0 90 a4 05 	lds	r13, 0x05A4
 b98:	e0 90 a5 05 	lds	r14, 0x05A5
 b9c:	f0 90 a6 05 	lds	r15, 0x05A6
 ba0:	c1 14       	cp	r12, r1
 ba2:	d1 04       	cpc	r13, r1
 ba4:	e1 04       	cpc	r14, r1
 ba6:	f1 04       	cpc	r15, r1
 ba8:	b9 f0       	breq	.+46     	; 0xbd8 <OSTaskStat+0x96>
 baa:	a4 e6       	ldi	r26, 0x64	; 100
 bac:	b0 e0       	ldi	r27, 0x00	; 0
 bae:	0e 94 26 06 	call	0xc4c	; 0xc4c <__muluhisi3>
 bb2:	a7 01       	movw	r20, r14
 bb4:	96 01       	movw	r18, r12
 bb6:	0e 94 f5 05 	call	0xbea	; 0xbea <__udivmodsi4>
 bba:	8c 2f       	mov	r24, r28
 bbc:	82 1b       	sub	r24, r18
 bbe:	85 36       	cpi	r24, 0x65	; 101
 bc0:	1c f0       	brlt	.+6      	; 0xbc8 <OSTaskStat+0x86>
 bc2:	c0 93 a9 05 	sts	0x05A9, r28
 bc6:	0a c0       	rjmp	.+20     	; 0xbdc <OSTaskStat+0x9a>
 bc8:	88 23       	and	r24, r24
 bca:	1c f4       	brge	.+6      	; 0xbd2 <OSTaskStat+0x90>
 bcc:	10 92 a9 05 	sts	0x05A9, r1
 bd0:	05 c0       	rjmp	.+10     	; 0xbdc <OSTaskStat+0x9a>
 bd2:	80 93 a9 05 	sts	0x05A9, r24
 bd6:	02 c0       	rjmp	.+4      	; 0xbdc <OSTaskStat+0x9a>
 bd8:	10 92 a9 05 	sts	0x05A9, r1
 bdc:	0e 94 55 02 	call	0x4aa	; 0x4aa <OSTaskStatHook>
 be0:	88 ec       	ldi	r24, 0xC8	; 200
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	0e 94 5a 05 	call	0xab4	; 0xab4 <OSTimeDly>
 be8:	b9 cf       	rjmp	.-142    	; 0xb5c <OSTaskStat+0x1a>

00000bea <__udivmodsi4>:
 bea:	a1 e2       	ldi	r26, 0x21	; 33
 bec:	1a 2e       	mov	r1, r26
 bee:	aa 1b       	sub	r26, r26
 bf0:	bb 1b       	sub	r27, r27
 bf2:	fd 01       	movw	r30, r26
 bf4:	0d c0       	rjmp	.+26     	; 0xc10 <__udivmodsi4_ep>

00000bf6 <__udivmodsi4_loop>:
 bf6:	aa 1f       	adc	r26, r26
 bf8:	bb 1f       	adc	r27, r27
 bfa:	ee 1f       	adc	r30, r30
 bfc:	ff 1f       	adc	r31, r31
 bfe:	a2 17       	cp	r26, r18
 c00:	b3 07       	cpc	r27, r19
 c02:	e4 07       	cpc	r30, r20
 c04:	f5 07       	cpc	r31, r21
 c06:	20 f0       	brcs	.+8      	; 0xc10 <__udivmodsi4_ep>
 c08:	a2 1b       	sub	r26, r18
 c0a:	b3 0b       	sbc	r27, r19
 c0c:	e4 0b       	sbc	r30, r20
 c0e:	f5 0b       	sbc	r31, r21

00000c10 <__udivmodsi4_ep>:
 c10:	66 1f       	adc	r22, r22
 c12:	77 1f       	adc	r23, r23
 c14:	88 1f       	adc	r24, r24
 c16:	99 1f       	adc	r25, r25
 c18:	1a 94       	dec	r1
 c1a:	69 f7       	brne	.-38     	; 0xbf6 <__udivmodsi4_loop>
 c1c:	60 95       	com	r22
 c1e:	70 95       	com	r23
 c20:	80 95       	com	r24
 c22:	90 95       	com	r25
 c24:	9b 01       	movw	r18, r22
 c26:	ac 01       	movw	r20, r24
 c28:	bd 01       	movw	r22, r26
 c2a:	cf 01       	movw	r24, r30
 c2c:	08 95       	ret

00000c2e <__umulhisi3>:
 c2e:	a2 9f       	mul	r26, r18
 c30:	b0 01       	movw	r22, r0
 c32:	b3 9f       	mul	r27, r19
 c34:	c0 01       	movw	r24, r0
 c36:	a3 9f       	mul	r26, r19
 c38:	70 0d       	add	r23, r0
 c3a:	81 1d       	adc	r24, r1
 c3c:	11 24       	eor	r1, r1
 c3e:	91 1d       	adc	r25, r1
 c40:	b2 9f       	mul	r27, r18
 c42:	70 0d       	add	r23, r0
 c44:	81 1d       	adc	r24, r1
 c46:	11 24       	eor	r1, r1
 c48:	91 1d       	adc	r25, r1
 c4a:	08 95       	ret

00000c4c <__muluhisi3>:
 c4c:	0e 94 17 06 	call	0xc2e	; 0xc2e <__umulhisi3>
 c50:	a5 9f       	mul	r26, r21
 c52:	90 0d       	add	r25, r0
 c54:	b4 9f       	mul	r27, r20
 c56:	90 0d       	add	r25, r0
 c58:	a4 9f       	mul	r26, r20
 c5a:	80 0d       	add	r24, r0
 c5c:	91 1d       	adc	r25, r1
 c5e:	11 24       	eor	r1, r1
 c60:	08 95       	ret

00000c62 <_exit>:
 c62:	f8 94       	cli

00000c64 <__stop_program>:
 c64:	ff cf       	rjmp	.-2      	; 0xc64 <__stop_program>
